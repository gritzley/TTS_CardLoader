-- this is called on player action
function handleContextMenu(player, targets)
    for _, obj in pairs(targets) do
        obj.clearContextMenu()
        contextMenuLookup[obj.type](obj, player)
    end
end

DEBUG_SLEEVE_URL = "https://cdn11.bigcommerce.com/s-bbfhow7rlv/images/stencil/1280x1280/products/129/529/MTG-Sleeves-End-Of-Things__72707.1506259920.PNG?c=2"

-- This table maps object types to contextMenu Items
-- Format
--  ["Object Type"] = {
--      ["Context Menu Item Name"] = function(obj, player)
--          //code
--      end
--  }
contextMenuLookup = {
    ["Card"] =
        function(card, player)
            card.addContextMenuItem("Sleeve", function()
                changeCardSleeve(card, getPlayerData(player, "sleeve") or CARD_BACK_URL)
            end, false)
            card.addContextMenuItem("Scale", function()

                card.setScale(CARD_SCALE or {1,1,1})
            end, false)

            local gmData = JSON.decode(card.getGMNotes())
            if gmData ~= nil and gmData.backface ~= nil then
                gmData = JSON.decode(card.getGMNotes())
                card.addContextMenuItem("Flip", function()
                    local tmp = card.getCustomObject()
                    card.setCustomObject({
                        face = gmData.backface,
                        back = tmp.back
                    })
                    gmData.backface = tmp.face
                end, false)
                card.setGMNotes(JSON.encode(gmData))
            end


        end,
    ["Deck"] =
        function(deck, player)
            deck.addContextMenuItem("Sleeve", function()
                changeDeckSleeves(deck, getPlayerData(player, "sleeve") or CARD_BACK_URL)
            end, false)
            deck.addContextMenuItem("Scale", function()
                for _, _ in pairs(deck.getObjects()) do
                    -- take top card and change scale
                    local card = deck.takeObject({index = 1})
                    card.setScale(CARD_SCALE or {1,1,1})
                end
            end, false)
        end
}
