function buildUI()UI.setXml([[
        <VerticalLayout
        id="popup"
        width="300"
        height="800"
        active="false"
        childAlignment="UpperRight"
        childForceExpandWidth="false"
        childForceExpandHeight="false">
            <Button
                onClick="closePopup"
                preferredWidth="30"
                preferredHeight="30">
                X
            </Button>
            <InputField
                id="decklist_input"
                preferredWidth="300"
                preferredHeight="700"
                onValueChanged="updatePopupValue"
                lineType="MultiLineNewLine">
            </InputField>
            <Button
                onClick="importDeckFromPopup"
                preferredWidth="300"
                preferredHeight="40">
                Import
            </Button>
        </VerticalLayout>
    ]])end;function closePopup()UI.setAttribute("popup","active","false")end;function openPopup(a)UI.setAttribute("popup","active","true")UI.setAttribute("popup","visibility",a)end;function importDeckFromPopup()local b=decodeCardData(POPUP_VALUE)createCardsFromData(b)closePopup()end;function updatePopupValue(c,d)POPUP_VALUE=d end;COMMAND_PATTERN="^%$(%w+)%s?(.*)"COMMAND={}COMMAND.import=function(_,e)openPopup(e.color)end;COMMAND.booster=function(f,_)if math.random()<0.1 then createRandomCard("s:"..f.."%20r:mythic")else createRandomCard("s:"..f.."%20r:rare")end;for g=1,3 do createRandomCard("s:"..f.."%20r:uncommon")end;for g=1,10 do createRandomCard("s:"..f.."%20r:common")end end;COMMAND.random=function(h,_)if h:match("-a")then h=h:gsub("-a","")local alchemy=true end;if h:match("alchemy")then local alchemy=true end;h=h:gsub("%s","%%20")createRandomCard(h,alchemy,true)end;COMMAND.spawn=function(i,_)local b=decodeCardData(i)createCardsFromData(b,true)end;COMMAND.setSleeve=function(j,e)setPlayerData(e,"sleeve",j)end;COMMAND.setScale=function(k,_)CARD_SCALE={k,k,k}end;COMMAND.boosterModel=function()local l={type="Custom_Model"}local m=spawnObject(l)m.setCustomObject({mesh="https://drive.google.com/file/d/1sUoY_0Hm71Ja2oxJIsO1Hc7ncSLPxFbJ/view?usp=sharing",type=6})end;COMMAND.token=function(n)local h=token_decoder(n)createRandomCard(h,true)end;function tryExecuteCommand(o,e)_,_,command,params=o:find(COMMAND_PATTERN)if command~=nil then if COMMAND[command]~=nil then COMMAND[command](params,e)else print(command.." is not a command")end;return true end end;PATTERN_DECODER={}MAINDECK_POSITION={0,1,0}SIDEBOARD_POSITION={3,1,0}COMMANDER_POSITION={0,1,3}COMPANION_POSITION={3,1,3}SET_ID_PATTERN="(%w%w%w*)"COLLECTOR_ID_PATTERN="(%d%d?%d?)"CARDNAME_PATTERN="([%w%s%p'\"%+%_/]+)"SIMPLE_PATTERN="(%d+)%s"..CARDNAME_PATTERN;MTGA_STRING_PATTERN=SIMPLE_PATTERN.."%("..SET_ID_PATTERN.."%)%s"MTGA_STRING_PATTERN_EXACT=MTGA_STRING_PATTERN..COLLECTOR_ID_PATTERN;MTGO_STRING_PATTERN=SIMPLE_PATTERN.."%s%["..SET_ID_PATTERN.."%]"MTGO_STRING_PATTERN_EXACT=SIMPLE_PATTERN.."%s<"..COLLECTOR_ID_PATTERN..">%s%["..SET_ID_PATTERN.."%]"PATTERN_DECODER[MTGO_STRING_PATTERN_EXACT]=function(line,p)_,_,p.amount,_,p.collector_number,p.set=line:find(MTGO_STRING_PATTERN_EXACT)end;PATTERN_DECODER[MTGO_STRING_PATTERN]=function(line,p)_,_,p.amount,p.name,p.set=line:find(MTGO_STRING_PATTERN)end;PATTERN_DECODER[MTGA_STRING_PATTERN_EXACT]=function(line,p)_,_,p.amount,_,p.set,p.collector_number=line:find(MTGA_STRING_PATTERN_EXACT)if target==COMPANION_POSITION then Companion=line elseif Companion==line then skip=true end end;PATTERN_DECODER[MTGA_STRING_PATTERN]=function(line,p)_,_,p.amount,p.name,p.set=line:find(MTGA_STRING_PATTERN)if target==COMPANION_POSITION then Companion=line elseif Companion==line then skip=true end end;PATTERN_DECODER[SIMPLE_PATTERN]=function(line,p)_,_,p.amount,p.name=line:find(SIMPLE_PATTERN)end;WebRequest.get("https://api.scryfall.com/catalog/creature-types",function(q)CREATURE_TYPES=JSON.decode(q.text).data end)WebRequest.get("https://api.scryfall.com/catalog/artifact-types",function(q)ARTIFACT_TYPES=JSON.decode(q.text).data end)WebRequest.get("https://api.scryfall.com/catalog/enchantment-types",function(q)ENCHANTMENT_TYPES=JSON.decode(q.text).data end)WebRequest.get("https://api.scryfall.com/catalog/keyword-abilities",function(q)KEYWORD_ABILITIES=JSON.decode(q.text).data end)WebRequest.get("https://api.scryfall.com/catalog/keyword-abilities",function(q)KEYWORD_ABILITIES=JSON.decode(q.text).data end)COLORS={[1]="white",[2]="blue",[3]="black",[4]="red",[5]="green"}function token_decoder(string)string=string:lower()local r,s=string:match("(%d)%/(%d)")local t=""local h=""local u=""local v=""local h=""for g,w in ipairs(CREATURE_TYPES)do if string:find(w:lower())then t=t..w.." "end end;for g,w in ipairs(ARTIFACT_TYPES)do if string:find(w:lower())then t=t..w.." "end end;for g,w in ipairs(ENCHANTMENT_TYPES)do if string:find(w:lower())then t=t..w.." "end end;for g,w in ipairs(COLORS)do if string:find(w)then v=v..w:sub(1,1)end end;if t==""then h=string.." is:token"else for g,w in ipairs(KEYWORD_ABILITIES)do if string:find(w:lower())then u=u..w.." "end end;if not(v=="")then v="c="..v end;if r then r="power="..r else r=""end;if s then s="toughness="..s else s=""end;h="!\""..t:gsub("%s$","").."\" o:\""..u:gsub("%s$","").."\" "..v.." "..r.." "..s.." is:token"end;log(h)return h end;function decodeCardData(x)local b={}local target=MAINDECK_POSITION;local targetLookup={Deck=MAINDECK_POSITION,Sideboard=SIDEBOARD_POSITION,Commander=COMMANDER_POSITION,Companion=COMPANION_POSITION}local Companion=nil;for line in magiclines(x)do local p={}local skip=false;local y=false;p.target=target;for z,A in pairs(PATTERN_DECODER)do if line:match(z)then A(line,p)y=true;break end end;if not y then target=targetLookup[line:gsub("%s+","")]or SIDEBOARD_POSITION;skip=true end;if skip then print"skipped"skip=false else if p.name~=nil then p.name=p.name:gsub("/.*","")end;if p.set~=nil then p.set=ammendSetName(p.set)end;table.insert(b,p)end end;return b end;function adjustTarget()target=targetLookup[line:gsub("%s+","")]or SIDEBOARD_POSITION;skip=true end;function ammendSetName(f)f=string.lower(f)if f=="dar"then f="dom"end;if f~=nil and f:match("%de$")then f=f.."d"end;return f end;function handleContextMenu(e,B)for _,c in pairs(B)do c.clearContextMenu()contextMenuLookup[c.type](c,e)end end;DEBUG_SLEEVE_URL="https://cdn11.bigcommerce.com/s-bbfhow7rlv/images/stencil/1280x1280/products/129/529/MTG-Sleeves-End-Of-Things__72707.1506259920.PNG?c=2"contextMenuLookup={["Card"]=function(p,e)p.addContextMenuItem("Sleeve",function()changeCardSleeve(p,getPlayerData(e,"sleeve")or CARD_BACK_URL)end,false)p.addContextMenuItem("Scale",function()p.setScale(CARD_SCALE or{1,1,1})end,false)local C=JSON.decode(p.getGMNotes())if C~=nil and C.backface~=nil then C=JSON.decode(p.getGMNotes())p.addContextMenuItem("Flip",function()local D=p.getCustomObject()p.setCustomObject({face=C.backface,back=D.back})C.backface=D.face end,false)p.setGMNotes(JSON.encode(C))end end,["Deck"]=function(E,e)E.addContextMenuItem("Sleeve",function()changeDeckSleeves(E,getPlayerData(e,"sleeve")or CARD_BACK_URL)end,false)E.addContextMenuItem("Scale",function()for _,_ in pairs(E.getObjects())do local p=E.takeObject({index=1})p.setScale(CARD_SCALE or{1,1,1})end end,false)end}function magiclines(F)if F:sub(-1)~="\n"then F=F.."\n"end;return F:gmatch("(.-)\n")end;SCRYFALL_BASE_URL="https://api.scryfall.com/"CARD_BACK_URL="https://static.wikia.nocookie.net/mtgsalvation_gamepedia/images/f/f8/Magic_card_back.jpg/revision/latest?cb=20140813141013"function createCardsFromData(b,G)if b[75]then local H={}for g,w in ipairs(b)do if g>75 then H[g-75]=w;b[g]=nil end end;createCardsFromData(H)end;local body=JSON.encode({identifiers=b})local headers={["Content-Type"]="application/json"}WebRequest.custom(SCRYFALL_BASE_URL.."cards/collection","POST",true,body,headers,function(q)if requestNotValid(q)then return end;local I=JSON.decode(q.text).not_found;if I then for g,w in ipairs(I)do print(JSON.encode(w).." not found")end end;local J=JSON.decode(q.text).data;for g,d in ipairs(J)do for K=1,b[g].amount do createCard(d,b[g].target,G)end end end)end;function createCardsFromQuery(h,G)WebRequest.custom(SCRYFALL_BASE_URL.."cards/search?q="..h,"POST",true,body,headers,function(q)if requestNotValid(q)then return end;local I=JSON.decode(q.text).not_found;if I then for g,w in ipairs(I)do print(JSON.encode(w).." not found")end end;local J=JSON.decode(q.text).data;for g,d in ipairs(J)do createCard(d,{0,0,0},G)end end)end;function createRandomCard(h,G)if not alchemyEnabled then h="game:paper%20"..h end;WebRequest.get(SCRYFALL_BASE_URL.."cards/random?q="..h,function(q)if requestNotValid(q)then return end;local p=JSON.decode(q.text)if p.code=="not_found"then print("No card matching the query could be found")return end;createCard(p,MAINDECK_POSITION,G)end)end;function createCard(b,target,G)local L={type="CardCustom",position=target,rotation={0,180,180},scale=CARD_SCALE or{1,1,1}}if G then L.rotation[3]=0 end;local p=spawnObject(L)if b.image_uris~=nil then p.setCustomObject({face=b.image_uris.large,back=CARD_BACK_URL})else p.setCustomObject({face=b.card_faces[1].image_uris.large,back=CARD_BACK_URL})p.setGMNotes(JSON.encode({backface=b.card_faces[2].image_uris.large}))end;p.setName(b.name)end;function tryObjectRandomize(M)local C=JSON.decode(M.getGMNotes())if C==nil then return end;if C.backface~=nil then local D=M.getCustomObject()M.setCustomObject({face=C.backface,back=D.back})C.backface=D.face end;M.setGMNotes(JSON.encode(C))end;function requestNotValid(q)if q.is_error then print("Request Failed")return true end;local N=q.getResponseHeader("Content-Type")or""if N~="application/json"and not N:match("^application/json;")then print("Unexpected response from Scryfall.")return true end end;function changeCardSleeve(p,j)p.setCustomObject({face=p.getCustomObject().face,back=j})end;function changeDeckSleeves(E,j)for _,_ in pairs(E.getObjects())do local p=E.takeObject({index=1})changeCardSleeve(p,j)end end;function setPlayerData(e,t,d)if PLAYERDATA[e.steam_name]==nil then PLAYERDATA[e.steam_name]={}end;PLAYERDATA[e.steam_name][t]=d end;function getPlayerData(e,t)if PLAYERDATA[e.steam_name]==nil then return nil end;return PLAYERDATA[e.steam_name][t]end;function savePlayerDataToState(O)O.playerdata=JSON.encode(PLAYERDATA)end;function loadPlayerDataFromState(O)PLAYERDATA=JSON.decode(O.playerdata)or{}end;function onLoad()buildUI()end;function onPlayerAction(e,P,B)if P==13 then handleContextMenu(e,B)end end;function onChat(o,e)if tryExecuteCommand(o,e)then return false end end;function onLoad(Q)local O=JSON.decode(Q)or{}loadPlayerDataFromState(O)buildUI()end;function onSave()local O={}O=savePlayerDataToState(O)return JSON.encode(O)end
